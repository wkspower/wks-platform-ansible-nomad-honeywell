---
- name: Update apt cache (Debian/Ubuntu)
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Install nginx (Debian/Ubuntu)
  apt:
    name: nginx
    state: present
  when: ansible_os_family == "Debian"

- name: Install nginx (RHEL/CentOS)
  yum:
    name: nginx
    state: present
  when: ansible_os_family == "RedHat"

- name: Create empty directory (RHEL/CentOS)
  file:
    path: "/etc/nginx/sites-available"
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: ansible_os_family == "RedHat"

- name: Configure main nginx.conf
  template:
    src: templates/nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
  notify: restart nginx

- name: Configure each site with TLS support (Debian/Ubuntu)
  template:
    src: "templates/{{ item }}.conf.j2"
    dest: "/etc/nginx/sites-available/{{ item }}.conf"
    owner: root
    group: root
    mode: '0644'
  loop:
    - api
    - app
    - camunda
    - kc
    - stg
  notify: restart nginx
  when: ansible_os_family == "Debian"

- name: Enable each site (Debian/Ubuntu)
  file:
    src: "/etc/nginx/sites-available/{{ item }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item }}.conf"
    state: link
  loop:
    - api
    - app
    - camunda
    - kc
    - stg
  notify: restart nginx
  when: ansible_os_family == "Debian"

- name: Configure each site with TLS support (RHEL/CentOS)
  template:
    src: "templates/{{ item }}.conf.j2"
    dest: "/etc/nginx/conf.d/{{ item }}.conf"
    owner: root
    group: root
    mode: '0644'
  loop:
    - api
    - app
    - camunda
    - kc
    - stg
  notify: restart nginx
  when: ansible_os_family == "RedHat"

- name: Remove default site configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx
